[{"/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/index.js":"1","/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/App.js":"2","/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/reportWebVitals.js":"3","/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/fetching.js":"4","/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/displaying.js":"5","/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/switching.js":"6","/media/sobhan/48D22408D223F938/reacttest/src/index.js":"7","/media/sobhan/48D22408D223F938/reacttest/src/reportWebVitals.js":"8","/media/sobhan/48D22408D223F938/reacttest/src/App.js":"9","/media/sobhan/48D22408D223F938/reacttest/src/fetching.js":"10","/media/sobhan/48D22408D223F938/reacttest/src/switching.js":"11","/media/sobhan/48D22408D223F938/reacttest/src/displaying.js":"12"},{"size":293,"mtime":1627893719624,"results":"13","hashOfConfig":"14"},{"size":167,"mtime":1627747883785,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1627744597549,"results":"16","hashOfConfig":"14"},{"size":2575,"mtime":1627897782087,"results":"17","hashOfConfig":"14"},{"size":1538,"mtime":1627897289563,"results":"18","hashOfConfig":"14"},{"size":1354,"mtime":1627849572326,"results":"19","hashOfConfig":"14"},{"size":293,"mtime":1627893719624,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1627744597549,"results":"22","hashOfConfig":"21"},{"size":167,"mtime":1627747883785,"results":"23","hashOfConfig":"21"},{"size":2575,"mtime":1627897782087,"results":"24","hashOfConfig":"21"},{"size":1354,"mtime":1627849572326,"results":"25","hashOfConfig":"21"},{"size":1538,"mtime":1627897289563,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1725iz2",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v5qx9r",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/index.js",[],"/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/App.js",[],"/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/reportWebVitals.js",[],"/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/fetching.js",["54","55"],"import React from \"react\";\nimport Displaying from './displaying'\nimport Switching from './switching'\n\nexport default class Fetching extends React.Component{\n    constructor(props){\n    super(props);\n    this.state={\n        actors:'',\n        sensors:'',\n        loading:true,\n    }\n    this.handler = this.handler.bind(this)\n\n}\n    async componentDidMount(){\n        const apiUrl1 = 'http://webswitch.ir:3000/actors';\n        const response = await fetch(apiUrl1);\n        const data1 = await response.json();\n        this.setState({actors:data1.actors})\n\n        const apiUrl2 = 'http://webswitch.ir:3000/sensors';\n        const response2 = await fetch(apiUrl2);\n        const data2 = await response2.json();\n        this.setState({sensors:data2.sensors,\n                     loading: false})\n    };\n    handler(id, status) {\n  \n        var newstatus= status==1 ? 0 : 1\n\n        \n        \n        this.switch(id, newstatus)\n        \n\n      }\n      async switch(id , newstatus){\n        const apiUrl1 = 'http://webswitch.ir:3000/actors';\n        const updateddata = {'actorid': id, 'actorstatus':newstatus}\n        console.log (updateddata)\n        const response = await fetch(apiUrl1,{ method:'POST', headers:{'Content-type':'application/json', 'Accept':'application/json'}, body:JSON.stringify(updateddata)});\n        const data1 = await response.json();\n        this.componentDidMount()\n\n\n    };\n    render(){\n    if (this.state.loading){\n        return(\n            <h1>loading ....</h1>\n        )};\n    if (this.state.sensors) {\n        return(\n            <div>\n                <table className=\"table table-striped \">\n                <thead>\n                    <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Percentage</th>\n                    </tr>\n                </thead>\n                <tbody>\n                        {this.state.sensors.map((sensor,i) => <Displaying key={i} sensor={sensor}/>)}\n                 </tbody>\n                 </table>\n                 <table className=\"table table-dark\">\n                <thead>\n                    <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Switch</th>\n                    </tr>\n                </thead>\n                <tbody>\n                        {this.state.actors.map((actor,i) => <Switching key={i} actor={actor} handler={this.handler} />)}\n                 </tbody>\n                 </table>\n            </div>\n        )\n\n    };\n}\n}\n","/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/displaying.js",["56","57","58"],"import React from \"react\";\n\n\n\n\n\n\n// var gaugeElement = document.querySelector(\".gauge\");\n\n\nexport default class Displaying extends React.Component{\n  constructor(props) {\n\n    super(props);\n    };\n    //  setGaugeValue( value) {\n    //   if (value < 0 || value > 1) {\n    //     return;\n    //   }\n    \n    //   gaugeElement.querySelector(\".gauge__fill\").style.transform = `rotate(${\n    //     value / 2\n    //   }turn)`;\n\n    //   gaugeElement.querySelector(\".gauge__cover\").textContent = `${Math.round(\n    //     value * 100\n    //   )}%`;\n    // }\n\n    render(){\n      \n\n      return (\n        <tr>\n        <th scope=\"row\">{this.props.sensor.sensorid}</th>\n        <td>{this.props.sensor.sensorname}</td>\n        {this.props.sensor.sensortype==2 &&\n        <td>\n        <div className=\"progress\">\n          <div className=\"progress-bar\" role=\"progressbar\" aria-valuenow={this.props.sensor.sensordata}\n              aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width:`${this.props.sensor.sensordata}%`}}>\n              {this.props.sensor.sensordata} %\n          </div>\n        </div>        \n        </td>\n    }\n      {this.props.sensor.sensortype==1 &&\n        <td>\n              <div class=\"gauge\">\n            <div class=\"gauge__body\">\n              <div class=\"gauge__fill\" style={{transform:`rotate(${this.props.sensor.sensordata /200}turn)`}}></div>\n              <div class=\"gauge__cover\">{this.props.sensor.sensordata}%</div>\n            </div>\n          </div>\n        </td>\n    }\n\n      </tr>\n      );\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/media/sobhan/48D22408D223F938/projects/reactjs/reacttest/src/switching.js",["59"],"import { max } from \"d3-array\";\nimport React from \"react\";\n\nvar toggle = []\n\nexport default class Displaying extends React.Component{ \n    constructor(props) {\n        super(props);\n        \n        // if (this.state == null){\n        // // this.state = {\n        // //     [`s${this.props.actor.actorid}`]: false\n        // // }\n        // console.log(this.state.s1)\n        // }\n\n        if (!toggle.includes(this.props.actor.actorname)){\n            toggle = [...toggle, this.props.actor.actorname];\n        }\n  \n        }\n        switchUpdate = () => {\n\n                this.props.handler(this.props.actor.actorid, this.props.actor.actorstatus);\n                console.log(this.props.actor.actorid, ' this is the child')\n  \n\n            // this.setState(()=>({toggleVar:[...this.state.toggleVar, this.props.actor.actorid]}))\n\n            // this.setState(prevState => ({toggleVar:!prevState.toggleVar}))\n            \n            \n        }\n\n\n    render(){\n\n    return (\n        <tr>\n        <th scope=\"row\">{this.props.actor.actorid}</th>\n        <td>{this.props.actor.actorname}</td>\n        <td>\n        <div className=\"form-check form-switch \">\n  <input className=\"form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckDefault\" checked={this.props.actor.actorstatus} onChange={this.switchUpdate}/>\n\n</div>\n        </td>\n\n      </tr>\n      );}}\n \n","/media/sobhan/48D22408D223F938/reacttest/src/index.js",[],"/media/sobhan/48D22408D223F938/reacttest/src/reportWebVitals.js",[],"/media/sobhan/48D22408D223F938/reacttest/src/App.js",[],"/media/sobhan/48D22408D223F938/reacttest/src/fetching.js",["60","61"],"/media/sobhan/48D22408D223F938/reacttest/src/switching.js",["62"],"/media/sobhan/48D22408D223F938/reacttest/src/displaying.js",["63","64","65"],{"ruleId":"66","severity":1,"message":"67","line":30,"column":30,"nodeType":"68","messageId":"69","endLine":30,"endColumn":32},{"ruleId":"70","severity":1,"message":"71","line":43,"column":15,"nodeType":"72","messageId":"73","endLine":43,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":12,"column":3,"nodeType":"76","messageId":"77","endLine":15,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":37,"column":38,"nodeType":"68","messageId":"69","endLine":37,"endColumn":40},{"ruleId":"66","severity":1,"message":"67","line":47,"column":36,"nodeType":"68","messageId":"69","endLine":47,"endColumn":38},{"ruleId":"70","severity":1,"message":"78","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":30,"column":30,"nodeType":"68","messageId":"69","endLine":30,"endColumn":32},{"ruleId":"70","severity":1,"message":"71","line":43,"column":15,"nodeType":"72","messageId":"73","endLine":43,"endColumn":20},{"ruleId":"70","severity":1,"message":"78","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":13},{"ruleId":"74","severity":1,"message":"75","line":12,"column":3,"nodeType":"76","messageId":"77","endLine":15,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":37,"column":38,"nodeType":"68","messageId":"69","endLine":37,"endColumn":40},{"ruleId":"66","severity":1,"message":"67","line":47,"column":36,"nodeType":"68","messageId":"69","endLine":47,"endColumn":38},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'data1' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'max' is defined but never used."]