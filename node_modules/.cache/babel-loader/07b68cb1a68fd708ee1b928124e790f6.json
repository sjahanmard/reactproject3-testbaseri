{"ast":null,"code":"var _jsxFileName = \"/home/sobhan/Desktop/reacttest/src/displaying.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gaugeElement = document.querySelector(\".gauge\");\n\nfunction setGaugeValue(value) {\n  if (value < 0 || value > 1) {\n    return;\n  }\n\n  gaugeElement.querySelector(\".gauge__fill\").style.transform = `rotate(${value / 2}turn)`;\n  gaugeElement.querySelector(\".gauge__cover\").textContent = `${Math.round(value * 100)}%`;\n}\n\nvar guagedata = .9;\nexport default class Displaying extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: this.props.sensor.sensorid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.props.sensor.sensorname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            role: \"progressbar\",\n            \"aria-valuenow\": this.props.sensor.sensordata,\n            \"aria-valuemin\": \"0\",\n            \"aria-valuemax\": \"100\",\n            style: {\n              width: `${this.props.sensor.sensordata}%`\n            },\n            children: [this.props.sensor.sensordata, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nsetGaugeValue(guagedata);","map":{"version":3,"sources":["/home/sobhan/Desktop/reacttest/src/displaying.js"],"names":["React","gaugeElement","document","querySelector","setGaugeValue","value","style","transform","textContent","Math","round","guagedata","Displaying","Component","constructor","props","render","sensor","sensorid","sensorname","sensordata","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAArB;;AAEA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AAC1B;AACD;;AAEDJ,EAAAA,YAAY,CAACE,aAAb,CAA2B,cAA3B,EAA2CG,KAA3C,CAAiDC,SAAjD,GAA8D,UAC5DF,KAAK,GAAG,CACT,OAFD;AAGAJ,EAAAA,YAAY,CAACE,aAAb,CAA2B,eAA3B,EAA4CK,WAA5C,GAA2D,GAAEC,IAAI,CAACC,KAAL,CAC3DL,KAAK,GAAG,GADmD,CAE3D,GAFF;AAGD;;AACD,IAAIM,SAAS,GAAG,EAAhB;AAKA,eAAe,MAAMC,UAAN,SAAyBZ,KAAK,CAACa,SAA/B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACC;;AAGDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACA;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA,kBAAiB,KAAKD,KAAL,CAAWE,MAAX,CAAkBC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAK,KAAKH,KAAL,CAAWE,MAAX,CAAkBE;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAA8B,YAAA,IAAI,EAAC,aAAnC;AAAiD,6BAAe,KAAKJ,KAAL,CAAWE,MAAX,CAAkBG,UAAlF;AACI,6BAAc,GADlB;AACsB,6BAAc,KADpC;AAC0C,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE,GAAE,KAAKN,KAAL,CAAWE,MAAX,CAAkBG,UAAW;AAAvC,aADjD;AAAA,uBAEK,KAAKL,KAAL,CAAWE,MAAX,CAAkBG,UAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAHA,eAWA;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBL;;AAzBsD;AA2BvDhB,aAAa,CAAEO,SAAF,CAAb","sourcesContent":["import React from \"react\";\n\n\nconst gaugeElement = document.querySelector(\".gauge\");\n\nfunction setGaugeValue( value) {\n  if (value < 0 || value > 1) {\n    return;\n  }\n\n  gaugeElement.querySelector(\".gauge__fill\").style.transform = `rotate(${\n    value / 2\n  }turn)`;\n  gaugeElement.querySelector(\".gauge__cover\").textContent = `${Math.round(\n    value * 100\n  )}%`;\n}\nvar guagedata = .9\n\n\n\n\nexport default class Displaying extends React.Component{\n  constructor(props) {\n    super(props);\n    };\n    \n\n    render(){\n      return (\n        <tr>\n        <th scope=\"row\">{this.props.sensor.sensorid}</th>\n        <td>{this.props.sensor.sensorname}</td>\n        <td>\n        <div className=\"progress\">\n          <div className=\"progress-bar\" role=\"progressbar\" aria-valuenow={this.props.sensor.sensordata}\n              aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width:`${this.props.sensor.sensordata}%`}}>\n              {this.props.sensor.sensordata} %\n          </div>\n        </div>        \n        </td>\n        <td>\n\n        </td>\n\n      </tr>\n      );\n}\n}\nsetGaugeValue( guagedata);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}