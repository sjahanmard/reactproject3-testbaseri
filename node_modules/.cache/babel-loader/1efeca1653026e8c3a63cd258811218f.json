{"ast":null,"code":"var _jsxFileName = \"/home/sobhan/Desktop/reacttest/src/displaying.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar guagedata = .9;\nexport default class Displaying extends React.Component {\n  constructor(props) {\n    var gaugeElement = document.querySelector(\".gauge\");\n    super(props);\n  }\n\n  setGaugeValue(value) {\n    if (value < 0 || value > 1) {\n      return;\n    }\n\n    gaugeElement.querySelector(\".gauge__fill\").style.transform = `rotate(${value / 2}turn)`;\n    gaugeElement.querySelector(\".gauge__cover\").textContent = `${Math.round(value * 100)}%`;\n  }\n\n  render() {\n    console.log(this.props.sensor.sensordata, 'this is it');\n    this.setGaugeValue(this.props.sensor.sensordata / 100);\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: this.props.sensor.sensorid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.props.sensor.sensorname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"gauge\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"gauge__body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"gauge__fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"gauge__cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/sobhan/Desktop/reacttest/src/displaying.js"],"names":["React","guagedata","Displaying","Component","constructor","props","gaugeElement","document","querySelector","setGaugeValue","value","style","transform","textContent","Math","round","render","console","log","sensor","sensordata","sensorid","sensorname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAKA,IAAIC,SAAS,GAAG,EAAhB;AAKA,eAAe,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,QAAIC,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AAEA,UAAMH,KAAN;AACC;;AACAI,EAAAA,aAAa,CAAEC,KAAF,EAAS;AACrB,QAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AAC1B;AACD;;AAEDJ,IAAAA,YAAY,CAACE,aAAb,CAA2B,cAA3B,EAA2CG,KAA3C,CAAiDC,SAAjD,GAA8D,UAC5DF,KAAK,GAAG,CACT,OAFD;AAGAJ,IAAAA,YAAY,CAACE,aAAb,CAA2B,eAA3B,EAA4CK,WAA5C,GAA2D,GAAEC,IAAI,CAACC,KAAL,CAC3DL,KAAK,GAAG,GADmD,CAE3D,GAFF;AAGD;;AAEDM,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWc,MAAX,CAAkBC,UAA9B,EAA0C,YAA1C;AACA,SAAKX,aAAL,CAAoB,KAAKJ,KAAL,CAAWc,MAAX,CAAkBC,UAAlB,GAA6B,GAAjD;AAEA,wBACE;AAAA,8BACA;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA,kBAAiB,KAAKf,KAAL,CAAWc,MAAX,CAAkBE;AAAnC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAK,KAAKhB,KAAL,CAAWc,MAAX,CAAkBG;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFA,eAWA;AAAA,+BACM;AAAK,UAAA,KAAK,EAAC,OAAX;AAAA,iCACF;AAAK,YAAA,KAAK,EAAC,aAAX;AAAA,oCACE;AAAK,cAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBL;;AA9CsD","sourcesContent":["import React from \"react\";\n\n\n\n\nvar guagedata = .9\n\n\n\n\nexport default class Displaying extends React.Component{\n  constructor(props) {\n    var gaugeElement = document.querySelector(\".gauge\");\n\n    super(props);\n    };\n     setGaugeValue( value) {\n      if (value < 0 || value > 1) {\n        return;\n      }\n    \n      gaugeElement.querySelector(\".gauge__fill\").style.transform = `rotate(${\n        value / 2\n      }turn)`;\n      gaugeElement.querySelector(\".gauge__cover\").textContent = `${Math.round(\n        value * 100\n      )}%`;\n    }\n\n    render(){\n      console.log(this.props.sensor.sensordata, 'this is it')\n      this.setGaugeValue( this.props.sensor.sensordata/100);\n\n      return (\n        <tr>\n        <th scope=\"row\">{this.props.sensor.sensorid}</th>\n        <td>{this.props.sensor.sensorname}</td>\n        {/* <td>\n        <div className=\"progress\">\n          <div className=\"progress-bar\" role=\"progressbar\" aria-valuenow={this.props.sensor.sensordata}\n              aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width:`${this.props.sensor.sensordata}%`}}>\n              {this.props.sensor.sensordata} %\n          </div>\n        </div>        \n        </td> */}\n        <td>\n              <div class=\"gauge\">\n            <div class=\"gauge__body\">\n              <div class=\"gauge__fill\"></div>\n              <div class=\"gauge__cover\"></div>\n            </div>\n          </div>\n        </td>\n\n      </tr>\n      );\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}