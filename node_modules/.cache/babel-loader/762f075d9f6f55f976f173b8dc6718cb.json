{"ast":null,"code":"var _jsxFileName = \"/home/sobhan/Desktop/reacttest/src/fetching.js\";\nimport React from \"react\";\nimport Displayingg from './displaying';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Fetching extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      actors: '',\n      sensors: '',\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    const apiUrl1 = 'http://webswitch.ir:3000/actors';\n    const response = await fetch(apiUrl1);\n    const data1 = await response.json();\n    this.setState({\n      actors: data1.actors\n    });\n    const apiUrl2 = 'http://webswitch.ir:3000/sensors';\n    const response2 = await fetch(apiUrl2);\n    const data2 = await response2.json();\n    this.setState({\n      actors: data2.actors,\n      loading: false\n    });\n    this;\n  }\n\n  render() {\n    if (this.state.loading) {\n      console.log(2);\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading ....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    }\n\n    ;\n\n    if (this.state.sensors) {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.sensors.map((sensor, i) => /*#__PURE__*/_jsxDEV(Displaying, {\n            sensor: sensor\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 63\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n    }\n\n    ;\n  }\n\n}","map":{"version":3,"sources":["/home/sobhan/Desktop/reacttest/src/fetching.js"],"names":["React","Displayingg","Fetching","Component","state","actors","sensors","loading","componentDidMount","apiUrl1","response","fetch","data1","json","setState","apiUrl2","response2","data2","render","console","log","map","sensor","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAsC;AAAA;AAAA;AAAA,SACjDC,KADiD,GAC3C;AACFC,MAAAA,MAAM,EAAC,EADL;AAEFC,MAAAA,OAAO,EAAC,EAFN;AAGFC,MAAAA,OAAO,EAAC;AAHN,KAD2C;AAAA;;AAM1B,QAAjBC,iBAAiB,GAAE;AACrB,UAAMC,OAAO,GAAG,iCAAhB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAD,CAA5B;AACA,UAAMG,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AACA,SAAKC,QAAL,CAAc;AAACT,MAAAA,MAAM,EAACO,KAAK,CAACP;AAAd,KAAd;AAEA,UAAMU,OAAO,GAAG,kCAAhB;AACA,UAAMC,SAAS,GAAG,MAAML,KAAK,CAACI,OAAD,CAA7B;AACA,UAAME,KAAK,GAAG,MAAMD,SAAS,CAACH,IAAV,EAApB;AACA,SAAKC,QAAL,CAAc;AAACT,MAAAA,MAAM,EAACY,KAAK,CAACZ,MAAd;AACDE,MAAAA,OAAO,EAAE;AADR,KAAd;AAEA;AACH;;AACDW,EAAAA,MAAM,GAAE;AACR,QAAI,KAAKd,KAAL,CAAWG,OAAf,EAAuB;AACnBY,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAEE;;AAAA;;AACN,QAAI,KAAKhB,KAAL,CAAWE,OAAf,EAAwB;AACpB,0BACQ;AAAO,QAAA,KAAK,EAAC,qBAAb;AAAA,gCACA;AAAA,iCACI;AAAA,oCACA;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAQA;AAAA,oBACS,KAAKF,KAAL,CAAWE,OAAX,CAAmBe,GAAnB,CAAuB,CAACC,MAAD,EAAQC,CAAR,kBAAc,QAAC,UAAD;AAAoB,YAAA,MAAM,EAAED;AAA5B,aAAiBC,CAAjB;AAAA;AAAA;AAAA;AAAA,kBAArC;AADT;AAAA;AAAA;AAAA;AAAA,gBARA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR;AAeH;;AAAA;AACJ;;AA1CoD","sourcesContent":["import React from \"react\";\nimport Displayingg from './displaying'\n\nexport default class Fetching extends React.Component{\n    state={\n        actors:'',\n        sensors:'',\n        loading:true,\n    }\n    async componentDidMount(){\n        const apiUrl1 = 'http://webswitch.ir:3000/actors';\n        const response = await fetch(apiUrl1);\n        const data1 = await response.json();\n        this.setState({actors:data1.actors})\n\n        const apiUrl2 = 'http://webswitch.ir:3000/sensors';\n        const response2 = await fetch(apiUrl2);\n        const data2 = await response2.json();\n        this.setState({actors:data2.actors,\n                     loading: false})\n        this\n    };\n    render(){\n    if (this.state.loading){\n        console.log(2);\n        return(\n            <h1>loading ....</h1>\n        )};\n    if (this.state.sensors) {\n        return(\n                <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Percentage</th>\n                    </tr>\n                </thead>\n                <tbody>\n                        {this.state.sensors.map((sensor,i) => <Displaying key={i} sensor={sensor}/>)}\n                 </tbody>\n                 </table>\n        )\n\n    };\n}\n}\n"]},"metadata":{},"sourceType":"module"}