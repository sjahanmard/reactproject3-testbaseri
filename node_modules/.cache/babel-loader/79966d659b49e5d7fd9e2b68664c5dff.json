{"ast":null,"code":"var _jsxFileName = \"/home/sobhan/Desktop/reacttest/src/fetching.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Fetching = () => {\n  _s();\n\n  const [actorsDatetime, setActorsDatetime] = useState('');\n  const [actors, setActors] = useState(null);\n  const [sensors, setSensors] = useState(null);\n  const [userID] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [sensorsDatetime, setSensorsDatetime] = useState('');\n  useEffect(() => {\n    const apiUrl1 = 'http://webswitch.ir:3000/actors';\n    fetch(apiUrl1).then(response => response.json()).then(data1 => {\n      setActors(data1.actors);\n      setActorsDatetime(data1.datetime);\n    });\n    console.log(actors);\n    console.log(actorsDatetime);\n    const apiUrl2 = 'http://webswitch.ir:3000/sensors';\n    fetch(apiUrl2).then(response => response.json()).then(data2 => {\n      setSensors(data2.sensors);\n      setSensorsDatetime(data2.datetime);\n      setLoading(false);\n    });\n    console.log(sensors);\n  }, [userID]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading ....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n\n  if (sensors) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: actors[1].actorid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n};\n\n_s(Fetching, \"68zvIYsXdXgdb4Zp/9MRubFbqN8=\");\n\n_c = Fetching;\nexport default Fetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fetching\");","map":{"version":3,"sources":["/home/sobhan/Desktop/reacttest/src/fetching.js"],"names":["useEffect","useState","Fetching","actorsDatetime","setActorsDatetime","actors","setActors","sensors","setSensors","userID","loading","setLoading","sensorsDatetime","setSensorsDatetime","apiUrl1","fetch","then","response","json","data1","datetime","console","log","apiUrl2","data2","actorid"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCH,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,IAAWR,QAAQ,CAAC,CAAD,CAAzB;AACA,QAAM,CAACS,OAAD,EAAWC,UAAX,IAAyBV,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMc,OAAO,GAAG,iCAAhB;AACAC,IAAAA,KAAK,CAAED,OAAF,CAAL,CACCE,IADD,CACQC,QAAD,IAAaA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAESG,KAAD,IAAW;AAACb,MAAAA,SAAS,CAACa,KAAK,CAACd,MAAP,CAAT;AAChBD,MAAAA,iBAAiB,CAACe,KAAK,CAACC,QAAP,CAAjB;AACH,KAJD;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,cAAZ;AAIA,UAAMoB,OAAO,GAAG,kCAAhB;AACAR,IAAAA,KAAK,CAAEQ,OAAF,CAAL,CACCP,IADD,CACQC,QAAD,IAAaA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAESQ,KAAD,IAAW;AAAChB,MAAAA,UAAU,CAACgB,KAAK,CAACjB,OAAP,CAAV;AACAM,MAAAA,kBAAkB,CAACW,KAAK,CAACJ,QAAP,CAAlB;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAkB,KAJtC;AAKAU,IAAAA,OAAO,CAACC,GAAR,CAAaf,OAAb;AACH,GAnBQ,EAmBP,CAACE,MAAD,CAnBO,CAAT;;AAoBA,MAAIC,OAAJ,EAAY;AACR,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAEE;;AAAA;;AACN,MAAIH,OAAJ,EAAa;AACT,wBACI;AAAA,gBAAKF,MAAM,CAAC,CAAD,CAAN,CAAUoB;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAAA;AAEJ,CArCD;;GAAMvB,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst Fetching = () => {\n    const [actorsDatetime, setActorsDatetime] = useState('')\n    const [actors, setActors] = useState(null)\n    const [sensors, setSensors] = useState(null)\n    const [userID] = useState(0) \n    const [loading , setLoading] = useState(true)\n    const [sensorsDatetime, setSensorsDatetime] = useState('')                                           \n    useEffect(()=>{\n        const apiUrl1 = 'http://webswitch.ir:3000/actors'\n        fetch (apiUrl1)\n        .then ((response)=> response.json())\n        .then  ((data1) => {setActors(data1.actors);\n            setActorsDatetime(data1.datetime)            \n        })\n        console.log(actors)\n        console.log(actorsDatetime)\n\n\n\n        const apiUrl2 = 'http://webswitch.ir:3000/sensors'\n        fetch (apiUrl2)\n        .then ((response)=> response.json())\n        .then  ((data2) => {setSensors(data2.sensors);\n                            setSensorsDatetime(data2.datetime);\n                            setLoading(false)});\n        console.log (sensors)\n    },[userID])\n    if (loading){\n        return(\n            <h1>loading ....</h1>\n        )};\n    if (sensors) {\n        return(\n            <h1>{actors[1].actorid}</h1>\n        )\n    };\n\n}\n \nexport default Fetching;"]},"metadata":{},"sourceType":"module"}